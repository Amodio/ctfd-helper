---
name: Build and Release

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags like v1.2.3
  workflow_dispatch:  # Allow manual triggering

permissions:
  contents: write  # Required for creating releases and uploading assets

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'  # Cache npm dependencies for faster builds

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Prepare release
        run: |
          mkdir ctfd-helper
          cp ctfd-helper.py ctfd-helper/
          mv build/ ctfd-helper/

      - name: Create ZIP archive
        run: |
          zip -r ctfd-helper.zip ctfd-helper/
          rm -rf ctfd-helper/

      - name: Build Windows executable
        run: |
          docker build -t ctfd-helper/windows_builder windows_builder/
          docker run --rm -v "${{ github.workspace }}:/mnt" \
          --name windows_builder ctfd-helper/windows_builder

      - name: Create GitHub release
        run: |
          # Create release if it doesn't exist
          if ! gh release view ${{ github.ref_name }} >/dev/null 2>&1; then
            gh release create ${{ github.ref_name }} \
              --title "Release ${{ github.ref_name }}" \
              --generate-notes
          fi

          # Upload release assets
          gh release upload ${{ github.ref_name }} \
            ctfd-helper.zip ctfd-helper.exe \
            --clobber  # Overwrite existing assets if they exist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Clean up artifacts
        if: always()
        run: |
          rm -f ctfd-helper.zip ctfd-helper.exe
#          docker rmi ctfd-helper/windows_builder || true
#          docker system prune -f || true  # Clean up unused Docker images and containers
